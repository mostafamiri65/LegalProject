// <auto-generated />
using System;
using Legal.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Legal.Data.Migrations
{
    [DbContext(typeof(LowDbContext))]
    [Migration("20231109063141_mig_InitialCatalog")]
    partial class mig_InitialCatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_100_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Legal.Data.Entities.ApplicationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DoingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoingDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ApplicationLog", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbAshkha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CodeMeli")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodePosti")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DateTavalod")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<int?>("DeSetCode")
                        .HasColumnType("int")
                        .HasColumnName("DE_SetCode")
                        .HasComment("شناسه مجموعه سازماني كاربر ثبت كننده ركورد");

                    b.Property<int?>("DeUserId")
                        .HasColumnType("int")
                        .HasColumnName("DE_UserId")
                        .HasComment("شناسه كاربر ثبت كننده ركورد");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Faks")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte?>("Jens")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NamePedar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("NoehAshkhasCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("Pisheh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReplAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Repl_Act")
                        .HasDefaultValueSql("((2))")
                        .HasComment("نوع رويداد");

                    b.Property<DateTime>("ReplTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Repl_Time")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("زمان رويداد");

                    b.Property<Guid>("ReplUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Repl_UID")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("مشخصه منحصر بفرد ركورد");

                    b.Property<string>("Semat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Site")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UpIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UP_IP")
                        .HasComment("آي يي آدرس شبكه اي كاربر ويرايش كننده ركورد");

                    b.Property<string>("UpMac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UP_MAC")
                        .HasComment("مك آدرس شبكه اي كاربر ويرايش كننده ركورد");

                    b.Property<string>("UpPc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Up_PC")
                        .HasComment("نام كامپيوتر كاربر ويرايش كننده ركورد");

                    b.Property<int?>("UpSetCode")
                        .HasColumnType("int")
                        .HasColumnName("Up_SetCode")
                        .HasComment("شناسه مجموعه سازماني كاربر ثبت كننده ركورد");

                    b.Property<int?>("UpUserId")
                        .HasColumnType("int")
                        .HasColumnName("Up_UserId")
                        .HasComment("شناسه كاربر ويرايش كننده ركورد");

                    b.Property<string>("WfDscp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("WF_Dscp")
                        .HasComment("آخرين شرح گردش كار");

                    b.Property<int?>("WfLevel")
                        .HasColumnType("int")
                        .HasColumnName("WF_Level")
                        .HasComment("مرحله گردش كار");

                    b.Property<string>("WfPath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("WF_Path")
                        .HasComment("مسير گردش كار");

                    b.HasKey("Id");

                    b.ToTable("TbAshkhas");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbKhahanTitle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TbKhahanTitle", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandeh", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("KandehBadvi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KhahanBadvi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("khahanBadvi");

                    b.Property<string>("KhahanTajdid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("khahanTajdid");

                    b.Property<string>("KhandehTajdid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("khandehTajdid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Code");

                    b.ToTable("TbNoyehParvandeh", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandehMarja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Lev")
                        .HasColumnType("int");

                    b.Property<int?>("NoyehParvandehCode")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NoyehParvandehCode");

                    b.ToTable("TbNoyehParvandehMarja", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandehMog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ShahrestanId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_TbMarjaMog");

                    b.HasIndex("ShahrestanId");

                    b.ToTable("TbNoyehParvandehMog", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbOstan", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("TbOstan", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbParvandeh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateIjad")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("DateRay")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("EjraDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<bool?>("EjraIs")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HagVekalat")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("HazinehDadresi")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Jaryan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Khahan")
                        .HasColumnType("int")
                        .HasColumnName("khahan");

                    b.Property<string>("Khasteh")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool?>("Lah")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MakhtoomeDalil")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MakhtoomeDate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("MakhtoomeIs")
                        .HasColumnType("bit");

                    b.Property<int?>("Maly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MarjaName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("NoyehParvandehCode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParvandehId")
                        .HasColumnType("int");

                    b.Property<string>("RakedDalil")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RakedDate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("RakedIs")
                        .HasColumnType("bit");

                    b.Property<string>("RayTajdidDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<bool?>("RayTajdidOk")
                        .HasColumnType("bit");

                    b.Property<string>("Search1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Search2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShParvandeh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShParvandeh24")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<int?>("ShShobeh")
                        .HasColumnType("int");

                    b.Property<int?>("ShahrestanId")
                        .HasColumnType("int");

                    b.Property<string>("TajdidDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("TajdidHagVekalat")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("TajdidHazinehDadresi")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<bool?>("TajdidIs")
                        .HasColumnType("bit");

                    b.Property<bool?>("TajdidKhahan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.HasKey("Id");

                    b.ToTable("TbParvandeh", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbParvandehBk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateIjad")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("DateRay")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("EjraDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<bool?>("EjraIs")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HagVekalat")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("HazinehDadresi")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Jaryan")
                        .HasColumnType("int");

                    b.Property<int?>("Khahan")
                        .HasColumnType("int")
                        .HasColumnName("khahan");

                    b.Property<string>("Khasteh")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool?>("Lah")
                        .HasColumnType("bit");

                    b.Property<string>("MakhtoomeDalil")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MakhtoomeDate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("MakhtoomeIs")
                        .HasColumnType("bit");

                    b.Property<int?>("Maly")
                        .HasColumnType("int");

                    b.Property<string>("MarjaName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("NoyehParvandehCode")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ParvandehId")
                        .HasColumnType("int");

                    b.Property<string>("RakedDalil")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("RakedDate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("RakedIs")
                        .HasColumnType("bit");

                    b.Property<string>("RayTajdidDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<bool?>("RayTajdidOk")
                        .HasColumnType("bit");

                    b.Property<string>("Search1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Search2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShParvandeh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShParvandeh24")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<int?>("ShShobeh")
                        .HasColumnType("int");

                    b.Property<int?>("ShahrestanId")
                        .HasColumnType("int");

                    b.Property<string>("TajdidDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("TajdidHagVekalat")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("TajdidHazinehDadresi")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<bool?>("TajdidIs")
                        .HasColumnType("bit");

                    b.Property<bool>("TajdidKhahan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TbParvandehBk", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbPrDasteh", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Code");

                    b.ToTable("TbPrDasteh", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Dscp")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Last")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PrNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TbRegion", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("HasDeveloperAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasEditAccess")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool>("HasOstanAccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRegionAccess")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool>("IsHeadquarters")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrganization")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TbRoles");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbShahrestan", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("IsOstan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<int>("OstanId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TbShahrestan", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbTarafeyn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AshkhasId")
                        .HasColumnType("int");

                    b.Property<int?>("DeSetCode")
                        .HasColumnType("int")
                        .HasColumnName("DE_SetCode")
                        .HasComment("شناسه مجموعه سازماني كاربر ثبت كننده ركورد");

                    b.Property<int?>("DeUserId")
                        .HasColumnType("int")
                        .HasColumnName("DE_UserId")
                        .HasComment("شناسه كاربر ثبت كننده ركورد");

                    b.Property<byte?>("Khahan")
                        .HasColumnType("tinyint")
                        .HasColumnName("khahan");

                    b.Property<DateTime?>("Mdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("MDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParvandehId")
                        .HasColumnType("int");

                    b.Property<int>("ReplAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Repl_Act")
                        .HasDefaultValueSql("((2))")
                        .HasComment("نوع رويداد");

                    b.Property<DateTime>("ReplTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Repl_Time")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("زمان رويداد");

                    b.Property<Guid>("ReplUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Repl_UID")
                        .HasDefaultValueSql("(newid())")
                        .HasComment("مشخصه منحصر بفرد ركورد");

                    b.Property<string>("UpIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UP_IP")
                        .HasComment("آي يي آدرس شبكه اي كاربر ويرايش كننده ركورد");

                    b.Property<string>("UpMac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UP_MAC")
                        .HasComment("مك آدرس شبكه اي كاربر ويرايش كننده ركورد");

                    b.Property<string>("UpPc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Up_PC")
                        .HasComment("نام كامپيوتر كاربر ويرايش كننده ركورد");

                    b.Property<int?>("UpSetCode")
                        .HasColumnType("int")
                        .HasColumnName("Up_SetCode")
                        .HasComment("شناسه مجموعه سازماني كاربر ثبت كننده ركورد");

                    b.Property<int?>("UpUserId")
                        .HasColumnType("int")
                        .HasColumnName("Up_UserId")
                        .HasComment("شناسه كاربر ويرايش كننده ركورد");

                    b.Property<byte?>("Vakhilkhahan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("WfDscp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("WF_Dscp")
                        .HasComment("آخرين شرح گردش كار");

                    b.Property<int?>("WfLevel")
                        .HasColumnType("int")
                        .HasColumnName("WF_Level")
                        .HasComment("مرحله گردش كار");

                    b.Property<string>("WfPath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("WF_Path")
                        .HasComment("مسير گردش كار");

                    b.HasKey("Id");

                    b.ToTable("TbTarafeyn", (string)null);
                });

            modelBuilder.Entity("Legal.Data.Entities.TbUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<int?>("OstanId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<int?>("ShahrestanId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TbUsers");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreateBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<Guid?>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("TbUserRoles");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandehMarja", b =>
                {
                    b.HasOne("Legal.Data.Entities.TbNoyehParvandeh", "NoyehParvandehCodeNavigation")
                        .WithMany("TbNoyehParvandehMarjas")
                        .HasForeignKey("NoyehParvandehCode")
                        .HasConstraintName("FK_TbNoyehParvandehMarja_TbNoyehParvandeh");

                    b.Navigation("NoyehParvandehCodeNavigation");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandehMog", b =>
                {
                    b.HasOne("Legal.Data.Entities.TbShahrestan", "Shahrestan")
                        .WithMany("TbNoyehParvandehMogs")
                        .HasForeignKey("ShahrestanId")
                        .HasConstraintName("FK_TbMarjaMog_TbShahrestan");

                    b.Navigation("Shahrestan");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbOstan", b =>
                {
                    b.HasOne("Legal.Data.Entities.TbRegion", "Region")
                        .WithMany("TbOstans")
                        .HasForeignKey("RegionId")
                        .IsRequired()
                        .HasConstraintName("FK_TbOstan_TbRegion");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbUserRole", b =>
                {
                    b.HasOne("Legal.Data.Entities.TbRole", "Role")
                        .WithMany("TbUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Legal.Data.Entities.TbUser", "User")
                        .WithMany("TbUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbNoyehParvandeh", b =>
                {
                    b.Navigation("TbNoyehParvandehMarjas");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbRegion", b =>
                {
                    b.Navigation("TbOstans");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbRole", b =>
                {
                    b.Navigation("TbUserRoles");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbShahrestan", b =>
                {
                    b.Navigation("TbNoyehParvandehMogs");
                });

            modelBuilder.Entity("Legal.Data.Entities.TbUser", b =>
                {
                    b.Navigation("TbUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
